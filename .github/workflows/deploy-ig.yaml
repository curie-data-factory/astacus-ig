# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy implementation-guide to GitHub pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main", "deploy_ig_pages"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

    # Set up languages framework and libraries
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install -g fsh-sushi
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2

      - name: Install Jekyll
        run: |
          gem install jekyll bundler
    
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - run: dotnet tool install --tool-path ./fhir-cli firely.terminal

    # Build IG
      - run: gradle buildIG
        continue-on-error: true

    # Build Fix
    # TODO remove this and properly fix the build...
      - run: ./fhir-cli/fhir install hl7.fhir.fr.core 1.1.0
        continue-on-error: true

      - run: rm package.json package-lock.json

      - run: gradle buildIG
    # End Of Build Fix
    # Build IG

    # Upload IG artifact
      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Fix permissions
        run: cp -r ./output _site

      - name: Fix permissions
        run: |
          chmod -c -R +rX "_site/" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
